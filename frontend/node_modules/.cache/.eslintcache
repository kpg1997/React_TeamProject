[{"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\index.js":"1","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\App.js":"2","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_reducers\\index.js":"4","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\SearchPlace.js":"5","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\hoc\\auth.js":"6","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardListPage.js":"7","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardUpdatePage.js":"8","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\LandingPage\\LandingPage.js":"9","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardDetailPage.js":"10","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardWritePage.js":"11","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\AddBoardWritePage.js":"12","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\LoginPage\\LoginPage.js":"13","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\AddBoardPage.js":"14","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\Header.js":"15","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js":"16","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\JBookPage.js":"17","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\KBookPage.js":"18","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\admin\\KimNkangPage.js":"19","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\CBookPage.js":"20","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\WBookPage.js":"21","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_reducers\\user_reducer.js":"22","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_reducers\\board_reducer.js":"23","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\MapContainer.js":"24","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\user_action.js":"25","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\board_action.js":"26","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\Lists.js":"27","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\Book.js":"28","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\hoc\\Config.js":"29","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\LeftMenu.js":"30","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\types.js":"31","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\BoardTypes.js":"32","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\useDetectOutsideClick.js":"33"},{"size":1127,"mtime":1620804455620,"results":"34","hashOfConfig":"35"},{"size":4347,"mtime":1620804455334,"results":"36","hashOfConfig":"35"},{"size":5140,"mtime":1620804455621,"results":"37","hashOfConfig":"35"},{"size":196,"mtime":1620804455476,"results":"38","hashOfConfig":"35"},{"size":1149,"mtime":1620804455373,"results":"39","hashOfConfig":"35"},{"size":1644,"mtime":1620804455618,"results":"40","hashOfConfig":"35"},{"size":1250,"mtime":1620804455510,"results":"41","hashOfConfig":"35"},{"size":4754,"mtime":1620804455511,"results":"42","hashOfConfig":"35"},{"size":335,"mtime":1620804455518,"results":"43","hashOfConfig":"35"},{"size":8410,"mtime":1620804455510,"results":"44","hashOfConfig":"35"},{"size":4140,"mtime":1620804455511,"results":"45","hashOfConfig":"35"},{"size":1237,"mtime":1620804455478,"results":"46","hashOfConfig":"35"},{"size":5055,"mtime":1620806542959,"results":"47","hashOfConfig":"35"},{"size":4607,"mtime":1620804455477,"results":"48","hashOfConfig":"35"},{"size":2134,"mtime":1620804455514,"results":"49","hashOfConfig":"35"},{"size":7256,"mtime":1620804455588,"results":"50","hashOfConfig":"35"},{"size":5145,"mtime":1620804455512,"results":"51","hashOfConfig":"35"},{"size":5527,"mtime":1620804455513,"results":"52","hashOfConfig":"35"},{"size":3309,"mtime":1620804455590,"results":"53","hashOfConfig":"35"},{"size":5461,"mtime":1620804455512,"results":"54","hashOfConfig":"35"},{"size":5168,"mtime":1620804455513,"results":"55","hashOfConfig":"35"},{"size":1630,"mtime":1620804455476,"results":"56","hashOfConfig":"35"},{"size":598,"mtime":1620804455475,"results":"57","hashOfConfig":"35"},{"size":2136,"mtime":1620804455373,"results":"58","hashOfConfig":"35"},{"size":1087,"mtime":1620804455474,"results":"59","hashOfConfig":"35"},{"size":2005,"mtime":1620804455416,"results":"60","hashOfConfig":"35"},{"size":3125,"mtime":1620804455517,"results":"61","hashOfConfig":"35"},{"size":5092,"mtime":1620804455335,"results":"62","hashOfConfig":"35"},{"size":255,"mtime":1620804455594,"results":"63","hashOfConfig":"35"},{"size":1172,"mtime":1620804455516,"results":"64","hashOfConfig":"35"},{"size":306,"mtime":1620804455474,"results":"65","hashOfConfig":"35"},{"size":358,"mtime":1620804455374,"results":"66","hashOfConfig":"35"},{"size":838,"mtime":1620804455517,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hd6wvp",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\index.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\App.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_reducers\\index.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\SearchPlace.js",["158"],"// SearchPlace.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { withTheme } from \"styled-components\";\r\nimport MapContainer from \"./MapContainer\"\r\n\r\nconst SearchPlace = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [place, setPlace] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPlace(inputText);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"inputForm\" onSubmit={handleSubmit}>\r\n        <input \r\n        // style={{padding:\"16px 50px 13px 15px\"}}\r\n          placeholder=\"Search Place...\"\r\n          onChange={onChange}\r\n          value={inputText}\r\n          className=\"SearchPlaceinput\"\r\n        />\r\n        <button type=\"submit\" style={{color:\"white\",\r\n      background:\"teal\",\r\n      padding: \"0.6rem 1rem\",\r\n      border: \"3px solid teal\",\r\n      fontSize:\"1rem\",\r\n      borderRadius:\"0.3rem\",\r\n      lineHeight:\"1.5\",\r\n      cursor:\"pointer\"\r\n     }}>검색</button>\r\n      </form>\r\n      <MapContainer searchPlace={place} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPlace;","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\hoc\\auth.js",["159","160","161","162","163"],"import React, { useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth } from '../_actions/user_action';\r\nimport {getFreeBoardList} from '../_actions/board_action'\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n\r\n    //null    =>  아무나 출입이 가능한 페이지\r\n    //true    =>  로그인한 유저만 출입이 가능한 페이지\r\n    //false   =>  로그인한 유저는 출입 불가능한 페이지\r\n    function AuthenticationCheck(props) {\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(response => {\r\n                console.log(response)\r\n                //로그인 하지 않은 상태 \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/users/login')\r\n                    }\r\n                } else {\r\n                    //로그인 한 상태 \r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        console.log('adminRoute',adminRoute)\r\n                        console.log('!response.payload.isAdmin',!response.payload.isAdmin)\r\n                        props.history.push('/')\r\n                    } else {\r\n                        if (option === false)\r\n                            props.history.push('/')\r\n                    }\r\n                }\r\n            })\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardListPage.js",["164"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Lists from \"../Common/Lists\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TitleStyled = styled.div`\r\n  text-align: center;\r\n  font-size: 50px;\r\n`;\r\nconst ListStyled = styled.div`\r\n  div {\r\n    display: inline-block;\r\n    margin: 0 10px 0 0;\r\n  }\r\n`;\r\nconst WriteLinkStyled = styled.div`\r\n  background-color:salmon;\r\n  .but{\r\n    color: white;\r\n  }\r\n  border: 1px solid rgb(185, 185, 185);\r\n  border-radius: 25px;\r\n  vertical-align: middle;\r\n  padding: 15px;\r\n  position: relative;\r\n  right: 0px;\r\n  width: 100px;\r\n  text-align: center;\r\n  margin: 30px auto 30px auto;\r\n  transition: 0.5s;\r\n  a {\r\n    color: black;\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\nconst FreeBoardListPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"게시판 목록 ==> \", user);\r\n\r\n  return (\r\n    <div>\r\n      <TitleStyled>자유게시판</TitleStyled>\r\n      <WriteLinkStyled>\r\n        <Link to={\"/freeBoardwrite\"} className=\"but\">작성하기</Link>\r\n      </WriteLinkStyled>\r\n      <Lists/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardListPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardUpdatePage.js",["165","166","167","168","169"],"import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Quill from \"quill\";\r\n// import \"quill/dist/quill.bubble.css\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  /* padding-bottom: 0.5rem; */\r\n  border: none;\r\n  /* margin-bottom: 2rem; */\r\n  width: 100%;\r\n`;\r\nconst TitleStyled = styled.div`\r\n  font-family: \"Jua\", sans-serif;\r\n  text-align: center;\r\n  font-size: 50px;\r\n  margin: 0 0 15px 0;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  margin: auto;\r\n  height: 600px;\r\n  .ql-editor {\r\n    padding: 0;\r\n    /* min-height: 320px; */\r\n    font-size: 1.2rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst buttonStyle = css`\r\nbackground-color:salmon;\r\ncolor: white;\r\n  width: 698px;\r\n  border: 1px solid rgb(185, 185, 185);\r\n  border-radius: 4px;\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n  padding: 0.3rem 1rem;\r\n  /* color: black; */\r\n  outline: none;\r\n  cursor: pointer;\r\n  height: 85px;\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.8rem;\r\n      padding-bottom: 0.8rem;\r\n      width: 100%;\r\n      font-size: 1.2rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      &:hover {\r\n        background: #000000;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\nconst OutFormDiv = styled.div`\r\n  margin: auto;\r\n  width: 700px;\r\n`;\r\n\r\nconst FreeBoardUpdatePage = ({ match, history }) => {\r\n  const fNo = match.params.fno;\r\n  const quillElement = useRef(null);\r\n  //quill 인스턴스설정\r\n  const quillInstance = useRef(null);\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      fNo: \"\",\r\n      fTitle: \"\",\r\n      fUserid: \"\",\r\n      fContent: \"\",\r\n      fDate: \"\",\r\n      fLike: \"\",\r\n      fView: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [updateTitle, setUpdateTitle] = useState(\"\");\r\n  const [updateContent, setUpdateContent] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.get(`/freeBoard/get/${fNo}`);\r\n    console.log(\"res.data==>\", res.data.freeboard[0]);\r\n    const data = res.data.freeboard[0];\r\n    setLists(data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      // theme: \"bubble\",\r\n      theme: \"snow\",\r\n      // value:`${lists.fContent}`,\r\n      // placeholder: `${lists.fContent}`,\r\n      placeholder: \"내용을 입력하시오\",\r\n      modules: {\r\n        toolbar: [\r\n          //[{ 'font': [] }],\r\n          [{ 'header': [1, 2, false] }],\r\n          ['bold', 'italic', 'underline','strike',],\r\n          ['link', 'image'],\r\n          [{ 'align': [] }, { 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n        ],\r\n      },\r\n      formats : [\r\n        //'font',\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image',\r\n        'align', 'color', 'background',        \r\n      ]\r\n    });\r\n\r\n    const quill = quillInstance.current;\r\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\r\n      console.log(\"quill.root.innerHTML ==>\", quill.root.innerHTML);\r\n      setUpdateContent(quill.root.innerHTML);\r\n    });\r\n  }, []);\r\n\r\n  const UpdateSubmit = () => {\r\n    // alert('updateContent'+updateContent+'updateTitle ==> '+updateTitle)\r\n    if (updateContent !== \"\" && updateTitle !== \"\") {\r\n      axios.put(`/freeBoard/update/${fNo}`, {\r\n        fTitle: updateTitle,\r\n        fContent: updateContent,\r\n      });\r\n      history.push(`/freeBoard`);\r\n      // history.push(`/freeBoard/${fNo}`)\r\n    } else {\r\n      alert(\"제목이나 내용을 입력해주세요\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    console.log(e.currentTarget.value);\r\n    setUpdateTitle(e.currentTarget.value);\r\n  };\r\n  const GoListMenu = () =>{\r\n    history.push(`/freeBoard`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <OutFormDiv className=\"UpdatePageDiv\">\r\n        <form onSubmit={UpdateSubmit} className=\"FreeBoardUpdateForm\">\r\n          <TitleInput\r\n          className=\"UpdateTitleInput\"\r\n            onChange={onChangeTitle}\r\n            placeholder=\"제목을 입력하시오\"\r\n          />\r\n          <QuillWrapper>\r\n            <div ref={quillElement} />\r\n          </QuillWrapper>\r\n          <StyledButton className=\"updateButton\">수정</StyledButton>\r\n        </form>\r\n        <StyledButton className=\"updateButton\" onClick={GoListMenu}>목록</StyledButton>\r\n      </OutFormDiv>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardUpdatePage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\LandingPage\\LandingPage.js",["170","171","172"],"import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Book from \"../../../Book\";\r\n\r\n\r\nfunction LandingPage({ props }) {\r\n\r\n  return (\r\n    <div\r\n    >\r\n      {/* <Header/> */}\r\n      <Book />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LandingPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardDetailPage.js",["173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Link, matchPath, withRouter } from \"react-router-dom\";\r\n// import * as qs from \"query-string\";\r\n// import { ButtonToolbar, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReplyRead } from \"../../../_actions/board_action\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst TableDivStyled = styled.div`\r\n  width: 650px;\r\n  margin: auto;\r\n  table {\r\n    width: 650px;\r\n    th,\r\n    td {\r\n      white-space: normal;\r\n      border: 1px solid #444444;\r\n    }\r\n    text-align: center;\r\n    th {\r\n      width: 80px;\r\n    }\r\n    td {\r\n      width: 150px;\r\n    }\r\n    .fTitle {\r\n      word-break:break-all;\r\n      width: 540px;\r\n    }\r\n    .writeContent {\r\n      div{\r\n        img{\r\n          max-width:200px;\r\n          max-height:210px;\r\n        }\r\n      }\r\n      width: 540px; \r\n      word-break:break-all;\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\nconst ReplyContentStyled = styled.div`\r\n  width: 660px;\r\n  margin: auto;\r\n  form {\r\n    input {\r\n      vertical-align: middle;\r\n      width: 500px;\r\n      height: 30px;\r\n    }\r\n    div {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    margin: 15px 15px 15px 0;\r\n    button {\r\n      box-shadow: 2px 2px 2px gray;\r\n      border-radius: 20px;\r\n      vertical-align: middle;\r\n      width: 100px;\r\n      height: 30px;\r\n      font-size: 15px;\r\n      margin: 0 0 0 20px;\r\n      background-color:salmon;\r\n      color:white;\r\n    }\r\n  }\r\n  }\r\n`;\r\nconst ReplyListStyled = styled.div``;\r\n\r\nconst UserClickStyled = styled.div`\r\n  div {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    margin: 15px 15px 15px 0;\r\n    button {\r\n      background-color:salmon;\r\n      color:white;\r\n      box-shadow: 2px 2px 2px gray;\r\n      border-radius: 20px;\r\n      vertical-align: middle;\r\n      width: 100px;\r\n      height: 30px;\r\n      font-size: 15px;\r\n      margin: 0 0 0 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ReplyItemStyled = styled.div`\r\n  width: 650px;\r\n  div {\r\n    display: inline-block;\r\n  }\r\n  .reUserid {\r\n    vertical-align: middle;\r\n    width: 150px;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .reContent {\r\n    white-space: normal;\r\n    width: 300px;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .reDate {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst FreeBoardDetailPage = ({ match, props, history }) => {\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"user.userData\", user);\r\n\r\n  const onDelClick = (e) => {\r\n    // console.log('user.userData.id ==> ',user.userData.id)\r\n    if (user.userData.isAuth == false) {\r\n      history.push(\"/users/login\");\r\n    } else if (user.userData.id != lists.fUserid) {\r\n      alert(\"해당 사용자가 아닙니다.\");\r\n      return false;\r\n    } else {\r\n      const con = window.confirm(\"삭제하시겠습니까?\");\r\n      if (con == true) {\r\n        const delNum = match.params.fno;\r\n        axios\r\n          .delete(`/freeBoard/del/${delNum}`)\r\n          .then(history.push(\"/freeBoard\"));\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const [lists, setLists] = useState([\r\n    // {\r\n    //   fNo: \"\",\r\n    //   fTitle: \"\",\r\n    //   fUserid: \"\",\r\n    //   fContent: \"\",\r\n    //   fDate: \"\",\r\n    //   fLike: \"\",\r\n    //   fView: \"\",\r\n    // },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    // {\r\n    //   fReUserid: \"\",\r\n    //   fReComment: \"\",\r\n    //   fReDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    async () => {\r\n      try {\r\n        const fNo = match.params.fno;\r\n        dispatch(getReplyRead(fNo));\r\n        const res = await axios.get(`/freeBoard/${fNo}`);\r\n        const inputdata = await res.data.data.freeboard.map((data) => ({\r\n          fNo: data.fNo,\r\n          fTitle: data.fTitle,\r\n          fUserid: data.fUserid,\r\n          fContent: data.fContent,\r\n          fDate: data.fDate,\r\n          fLike: data.fLike,\r\n          fView: data.fView,\r\n        }));\r\n        // 댓글\r\n        const replydata = await res.data.data.Reply.map((data) => ({\r\n          fReNo:data.fReNo,\r\n          fReUserid: data.fReUserid,\r\n          fReComment: data.fReComment,\r\n          fReDate: data.fReDate,\r\n        }));\r\n        console.log(\"replydata ==> \", replydata);\r\n        setLists(inputdata[0]);\r\n        setReply(reply.concat(replydata));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    // []\r\n    [dispatch]\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const fNo = match.params.fno;\r\n  //   dispatch(getReplyRead(fNo));\r\n  // }, [dispatch]);\r\n\r\n  const [writereply, setWriteRely] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteRely(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    // e.preventDefault();\r\n    const fNo = match.params.fno;\r\n    if (user.userData.isAuth == false) {\r\n      history.push(\"/users/login\");\r\n    } else if (writereply == \"\") {\r\n      return alert(\"댓글을 입력하시오\");\r\n    } else {\r\n      axios.post(`/freeBoard/fReply/write/${fNo}`, {\r\n        fBoardNo: fNo,\r\n        fReComment: writereply,\r\n      });\r\n      setWriteRely(\"\");\r\n      // .then((res) => alert('resresresresresresres',res)).catch(e => {console.log(e)});\r\n      history.push(`/freeBoard/${fNo}`);\r\n    }\r\n  };\r\n\r\n  const updateButton = () => {\r\n    if (user.userData.isAuth == false) {\r\n      history.push(\"/users/login\");\r\n    } else if (user.userData.id != lists.fUserid) {\r\n      alert(\"해당 사용자가 아닙니다.\");\r\n      return false;\r\n    } else {\r\n      const con = window.confirm(\"수정페이지 이동시 그 전 내용은 삭제됩니다.\");\r\n      if (con == true) {\r\n        history.push(`/freeBoardupdate/${lists.fNo}`);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickFreeBoardList=() =>{\r\n    history.push('/freeBoard')\r\n  }\r\n\r\n  return (\r\n    <div className='FreeBoardDetailDiv'>\r\n      <TableDivStyled className=\"FreeBoardDetailTableDiv\">\r\n        <table key={lists.fNo}>\r\n          <tr>\r\n            <th>글번호</th>\r\n            <td>{lists.fNo}</td>\r\n            <th>작성자</th>\r\n            <td>{lists.fUserid}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>작성날짜</th>\r\n            <td>\r\n              <Moment format=\"YYYY/MM/DD\">{lists.fDate}</Moment>\r\n            </td>\r\n            <th>조회수</th>\r\n            <td>{lists.fView}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>제목</th>\r\n            <td colspan=\"3\" className=\"fTitle\" >\r\n              {lists.fTitle}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <th className=\"content\">내용</th>\r\n            <td className=\"writeContent\" colspan=\"3\">\r\n              <div dangerouslySetInnerHTML={{ __html: lists.fContent }} />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <UserClickStyled className=\"FreeBoardDetailButtonDiv\">\r\n          <div>\r\n            <button onClick={onClickFreeBoardList}>목록</button>\r\n          </div>\r\n          {/* 하지만 새로 고침시 useSelector가 사라져서 오류가 뜬다.... */}\r\n          {/* {user.userData.id == lists.fUserid ? ( */}\r\n          <div>\r\n            <button onClick={updateButton}>수정하기</button>\r\n          </div>\r\n          <div>\r\n            <button onClick={onDelClick}>삭제</button>\r\n          </div>\r\n          {/* ) : (\r\n            <></>\r\n          )} */}\r\n        </UserClickStyled>\r\n      </TableDivStyled>\r\n      <ReplyContentStyled className=\"ReplyContentStyled\">\r\n        <form onSubmit={writeReplySubmit}>\r\n          <input type=\"text\" onChange={writereplyChange} value={writereply} />\r\n          <div><button className=\"but\">작성하기</button></div>\r\n        </form>\r\n        <ReplyListStyled className=\"ReplyListStyled\">\r\n          {reply.map((re) => {\r\n            return (\r\n              <ReplyItemStyled key={re.fReNo} className=\"ReplyItem\">\r\n                <div className=\"reUserid\">{re.fReUserid}</div>\r\n                <div className=\"reContent\">{re.fReComment}</div>\r\n                <div className=\"reDate\">\r\n                  <Moment format=\"YYYY/MM/DD\">{re.fReDate}</Moment>\r\n                </div>\r\n                <hr />\r\n              </ReplyItemStyled>\r\n            );\r\n          })}\r\n        </ReplyListStyled>\r\n      </ReplyContentStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardDetailPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\FreeBoardWritePage.js",["185","186","187"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Quill from \"quill\";\r\nimport ReactQuill from 'react-quill';\r\n// import \"quill/dist/quill.bubble.css\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  /* padding-bottom: 0.5rem; */\r\n  border: none;\r\n  /* margin-bottom: 2rem; */\r\n  width: 100%;\r\n`;\r\nconst QuillWrapper = styled.div`\r\n  margin: auto;\r\n  height: 200px;\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 180px;\r\n    font-size: 1.2rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst buttonStyle = css`\r\nbackground-color:salmon;\r\ncolor: white;\r\n  width: 698px;\r\n  border: 1px solid rgb(185, 185, 185);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.3rem 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n  height: 30px;\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.8rem;\r\n      padding-bottom: 0.8rem;\r\n      width: 100%;\r\n      font-size: 1.2rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      &:hover {\r\n        background: #000000;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\nconst OutFormDiv = styled.div`\r\n  /* border: 1px solid rgb(185, 185, 185); */\r\n  margin: auto;\r\n  width: 700px;\r\n  height: 300px;\r\n  .FreeBoardForm{\r\n    height:300px;\r\n  }\r\n`;\r\n\r\nconst FreeBoardWritePage = ({ title, body, history }) => {\r\n  //quill을 적용할 Div엘리먼트 설정\r\n  const quillElement = useRef(null);\r\n  //quill 인스턴스설정\r\n  const quillInstance = useRef(null);\r\n\r\n  const [fTitle, setFTitle] = useState(\"\");\r\n  const [fContent, setFContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(fTitle, fContent);\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      // theme: \"bubble\",\r\n      theme: \"snow\",\r\n      placeholder: \"내용을 입력하시오\",\r\n      modules: {\r\n        toolbar: [\r\n          //[{ 'font': [] }],\r\n          [{ 'header': [1, 2, false] }],\r\n          ['bold', 'italic', 'underline','strike',],\r\n          ['link', 'image'],\r\n          [{ 'align': [] }, { 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n        ],\r\n      },\r\n      formats : [\r\n        //'font',\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n        'list', 'bullet', 'indent',\r\n        'link', 'image',\r\n        'align', 'color', 'background',        \r\n      ]\r\n    });\r\n    const quill = quillInstance.current;\r\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\r\n      console.log(\"quill.root.innerHTML ==>\", quill.root.innerHTML);\r\n      setFContent(quill.root.innerHTML);\r\n    });\r\n  }, []);\r\n\r\n  const onChangeTitle = (e) => {\r\n    console.log(\"title\", e.currentTarget.value);\r\n    setFTitle(e.currentTarget.value);\r\n    console.log(fTitle);\r\n  };\r\n\r\n  const BoardSubmit = async (e) => {\r\n    if (fTitle !== \"\" && fContent !== \"\") {\r\n      try {\r\n        axios.post(\"/freeBoard/write\", {\r\n          fTitle: fTitle,\r\n          fContent: fContent,\r\n        });\r\n        history.push(\"/freeBoard\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      alert(\"제목이나 내용을 입력하시오\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"FreeBoardWriteOutDiv\">\r\n      <OutFormDiv className=\"FreewriteDiv\">\r\n        <form onSubmit={BoardSubmit} className=\"FreeBoardForm\">\r\n          <TitleInput\r\n            className=\"TitleIput\"\r\n            placeholder=\"제목을 입력하시오\"\r\n            onChange={onChangeTitle}\r\n            value={title}\r\n          />\r\n          <hr />\r\n          <QuillWrapper>\r\n            <div ref={quillElement} />\r\n          </QuillWrapper>\r\n          <StyledButton className=\"WriteButtonDiv\">작성</StyledButton>\r\n        </form>\r\n      </OutFormDiv>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardWritePage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\AddBoardWritePage.js",["188"],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddBoardDivStyle = styled.div`\r\n    height:315px;\r\n    form{\r\n      margin:auto;\r\n      width:230px;\r\n    }\r\n    button{\r\n      background-color:salmon;\r\n      color:white;\r\n      padding:5px;\r\n    }\r\n    input{\r\n      height:35px;\r\n    }\r\n    input,button{\r\n      vertical-align:middle\r\n    }\r\n\r\n`;\r\nconst AddBoardWritePage = ({ history }) => {\r\n  const [menu, setMenu] = useState(\"\");\r\n  const writeMenu = (e) => {\r\n    console.log(e.currentTarget.value);\r\n    setMenu(e.currentTarget.value);\r\n  };\r\n  const OnSubmit = () => {\r\n    //   alert(menu)\r\n    if (menu == \"\") {\r\n      alert(\"내용이 필요합니다.\");\r\n      return false;\r\n    }\r\n    axios.post(\"/addBoard/write\", {\r\n      aContent: menu,\r\n    });\r\n    history.push(\"/addBoard\");\r\n  };\r\n  return (\r\n    <AddBoardDivStyle className=\"AddBoardDivStyle\">\r\n      <form onSubmit={OnSubmit}>\r\n        <input placeholder=\"메뉴이름을 작성해주세요\" onChange={writeMenu} />\r\n        <button>신청</button>\r\n      </form>\r\n    </AddBoardDivStyle>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddBoardWritePage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\LoginPage\\LoginPage.js",["189","190","191","192","193"],"import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// import { Form, Icon, Input, Checkbox, Typography } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// const { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialId = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        id: initialId,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        id: Yup.string().required(\"id is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            id: values.id,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.id);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h1 className=\"logintitle\">Log In</h1>\r\n            <form className=\"loginform\" onSubmit={handleSubmit}>\r\n              <form required>\r\n                <input className=\"logininput\"\r\n                  id=\"id\"\r\n                  placeholder=\"   ID\"\r\n                  type=\"text\"\r\n                  value={values.id}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.id && touched.id ? \"text-input error\" : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.id && touched.id && (\r\n                  <div className=\"input-feedback\">{errors.id}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form required>\r\n                <input className=\"logininput\"\r\n                  id=\"password\"\r\n                  placeholder=\"   PASSWORD\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </form>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p\r\n                    style={{\r\n                      color: \"#ff0000bf\",\r\n                      fontSize: \"0.7rem\",\r\n                      border: \"1px solid\",\r\n                      padding: \"1rem\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <div>\r\n                <div className=\"loginbutton_con\">\r\n                  <button className=\"loginbutton\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Board\\AddBoardPage.js",["194","195","196"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAddBoardList } from \"../../../_actions/board_action\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst TitleStyled = styled.div`\r\n  text-align: center;\r\n  font-size: 50px;\r\n`;\r\n\r\nconst ListStyled = styled.div`\r\n  width: 700px;\r\n  margin: auto;\r\n  table {\r\n    tr {\r\n      /* .menu {\r\n        width: 80px;\r\n      } */\r\n      th {\r\n        text-align: center;\r\n        width: 200px;\r\n      }\r\n      .date {\r\n        width: 250px;\r\n      }\r\n      td {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WriteLinkStyled = styled.div`\r\n  border: 1px solid rgb(185, 185, 185);\r\n  border-radius: 25px;\r\n  vertical-align: middle;\r\n  padding: 15px;\r\n  position: relative;\r\n  right: 0px;\r\n  width: 100px;\r\n  text-align: center;\r\n  margin: 30px auto 30px auto;\r\n  transition: 0.5s;\r\n  a {\r\n    color: black;\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n  .but{\r\n    color:white;\r\n  }\r\n  background-color:salmon;\r\n`;\r\n\r\nconst AddBoardList = styled.div`\r\n  /* width: 1300px;\r\n  margin: auto; */\r\n`;\r\n\r\nconst AddBoardListItem = styled.div`\r\n  display: inline-block;\r\n  border: 1px solid rgb(185, 185, 185);\r\n  border-radius:15px;\r\n  width: 300px;\r\n  margin: 10px;\r\n  hr{\r\n    background-color: rgb(185, 185, 185);\r\n  }\r\n  .aContent {\r\n    word-break: break-all;\r\n    text-align: center;\r\n    font-size: 2.3rem;\r\n  }\r\n  .aContent,\r\n  .ndu {\r\n    display: block;\r\n  }\r\n  .ndu {\r\n    .aNo,\r\n    .du {\r\n      /* display: inline-block; */\r\n    }\r\n    .aNo {\r\n      margin:0 0 0 5px;\r\n      display: inline-block;\r\n      width: 140px;\r\n      font-size: 2rem;\r\n    }\r\n    .du {\r\n      display: inline-block;\r\n      width: 150px;\r\n      .aDate {\r\n        text-align: right;\r\n      }\r\n      .aUserid {\r\n        text-align: right;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddBoardPage = () => {\r\n  const [lists, setLists] = useState([\r\n    // {\r\n    //   aNo: \"\",\r\n    //   aUserid: \"\",\r\n    //   aContent: \"\",\r\n    //   aDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    async () => {\r\n      try {\r\n        dispatch(getAddBoardList());\r\n        const res = await axios.get(\"/addBoard\");\r\n        const inputdata = await res.data.addboard.map((data) => ({\r\n          aNo: data.aNo,\r\n          aUserid: data.aUserid,\r\n          aContent: data.aContent,\r\n          aDate: data.aDate,\r\n        }));\r\n        setLists(lists.concat(inputdata));\r\n        console.log(\"addboard inputdata ==>\", inputdata);\r\n        console.log(\"lists ==>\", lists);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    [dispatch]\r\n    // []\r\n  );\r\n  console.log(\"lists==>\", lists);\r\n\r\n  return (\r\n    <div className=\"AddBoardPage\">\r\n      <TitleStyled>신청게시판</TitleStyled>\r\n      <WriteLinkStyled>\r\n        <Link to={\"/addBoard/write\"} className=\"but\">작성하기</Link>\r\n      </WriteLinkStyled>\r\n      {/* <ListStyled>\r\n        <table>\r\n          <tr>\r\n            <th>글번호</th>\r\n            <th>작성자</th>\r\n            <th >신청메뉴</th>\r\n            <th>작성일자</th>\r\n          </tr>\r\n\r\n          {lists.map((list) => {\r\n            if (!list) {\r\n              return <div>게시글이 없습니다.</div>;\r\n            } else {\r\n              return (\r\n                <tr key={list.aNo}>\r\n                  <td>{list.aNo}</td>\r\n                  <td>{list.aUserid}</td>\r\n                  <td >{list.aContent}</td>\r\n                  <td>\r\n                    <Moment format=\"YYYY/MM/DD\">{list.aDate}</Moment>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </table>\r\n      </ListStyled> */}\r\n      <AddBoardList className=\"AddBoardList\">\r\n        {lists.map((list) => (\r\n          <AddBoardListItem key={list.aNo} className=\"AddBoardListItem\">\r\n            <div className=\"aContent\">{list.aContent}</div>\r\n            <hr />\r\n            <div className=\"ndu\">\r\n              <div className=\"aNo\">{list.aNo}</div>\r\n              <div className=\"du\">\r\n                <div className=\"aDate\">\r\n                  <Moment format=\"YYYY/MM/DD\">{list.aDate}</Moment>\r\n                </div>\r\n                <div className=\"aUserid\">{list.aUserid}</div>\r\n              </div>\r\n            </div>\r\n          </AddBoardListItem>\r\n        ))}\r\n      </AddBoardList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddBoardPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\Header.js",["197","198"],"import React from \"react\";\r\n// import { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport { USER_SERVER } from \"../../../hoc/Config\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImgStyled = styled.div`\r\n`;\r\n\r\nfunction Header(props) {\r\n  const logoImg = \"/images/logo512.png\";\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"user.userData ==> \", user.userData, \",\");\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/users/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <div className=\"headerDIv\">\r\n        <div className=\"headerInDiv\">\r\n          <ImgStyled className=\"headerImage\">\r\n            <Link to={\"/\"}>\r\n              <img src={logoImg} className=\"logo\" />\r\n            </Link>\r\n          </ImgStyled>\r\n          <LeftMenu />\r\n          <div\r\n            className=\"header_right\"\r\n          >\r\n            <ul className=\"loginLink\">\r\n              <li>\r\n                <Link to={\"/users/login\"}>Login</Link>\r\n              </li>\r\n              <li>\r\n                <Link to={\"/users/register\"}>Signup</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"headerDIv\">\r\n        <div className=\"headerInDiv\">\r\n        <ImgStyled className=\"headerImage\">\r\n            <Link to={\"/\"}>\r\n              <img src={logoImg} className=\"logo\" />\r\n            </Link>\r\n          </ImgStyled>\r\n        <LeftMenu />\r\n        <div className=\"header_right\" style={{ width: \"150px\" }}>\r\n          <></>\r\n          <ul className=\"loginLink\">\r\n            <li>\r\n              <Link onClick={logoutHandler}>Logout</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js",["199","200","201","202"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { ErrorMessage, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// import { Form, Input, Button } from \"antd\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n\r\n\r\n  console.log('props',props);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        nickname: \"\",\r\n        id: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        id: Yup.string().required(\"id is required\"),\r\n        nickname: Yup.string().required(\"NickName is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            id: values.id,\r\n            nickname: values.nickname,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            console.log('response.payload',response.payload)\r\n            if (response.payload.success) {\r\n              props.history.push(\"/users/login\");\r\n            } else {\r\n              alert(response.payload.errMsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app2\">\r\n            <h2>Sign up</h2>\r\n            <form\r\n              style={{ minWidth: \"300px\"}}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <form required label=\"id\">\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"id\"\r\n                  placeholder=\"ID\"\r\n                  type=\"text\"\r\n                  value={values.id}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.id && touched.id ? \"text-input error\" : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.id && touched.id && (\r\n                  <div className=\"input-feedback\">{errors.id}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form required label=\"NickName\">\r\n                <input  style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"nickname\"\r\n                  placeholder=\"NICKNAME\"\r\n                  type=\"text\"\r\n                  value={values.nickname}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.nickname && touched.nickname\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.nickname && touched.nickname && (\r\n                  <div className=\"input-feedback\">{errors.nickname}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"email\"\r\n                  placeholder=\"EMAIL\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"password\"\r\n                  placeholder=\"PASSWORD\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form required label=\"Confirm Password\" hasFeedback>\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"CONFIRM PASSWORD\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form {...tailFormItemLayout} style={{textAlign:\"center\",padding:\"5px\"}}>\r\n                <button className=\"loginbutton\"\r\n                style={{width:\"200px\", textAlign:\"center\"}}\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\JBookPage.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../../Book.scss\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst JBookPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      jBookNo: \"\",\r\n      jBookTitle: \"\",\r\n      jBookImg: \"\",\r\n      // jBookReply:\"\",\r\n    },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    // {\r\n    //   jBookReUserid: \"\",\r\n    //   jBookReComment: \"\",\r\n    //   jBookReDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n\r\n      const res = await axios.get(\"/jBook\");\r\n      const inputdata = await res.data.data.jBook.map((data) => ({\r\n        jBookNo: data.jBookNo,\r\n        jBookTitle: data.jBookTitle,\r\n        jBookImg: data.jBookImg,\r\n        // jBookReply: data.jBookReply,\r\n      }));\r\n\r\n      setLists(inputdata[0]);\r\n      const jBookmNo =inputdata[0].jBookNo;\r\n      console.log('jobbokmno====>,,,',jBookmNo);\r\n\r\n      const replyres = await axios.get(`/jBook/${jBookmNo}`);\r\n      const replydata = await replyres.data.data.jBookReply.map((data) => ({\r\n        jBookReUserid: data.jBookReUserid,\r\n        jBookReComment: data.jBookReComment,\r\n        jBookReDate: data.jBookReDate,\r\n      }));\r\n      console.log(\"replydata ==> \", replydata);\r\n      setReply(reply.concat(replydata));\r\n      console.log(\"lists==>\", lists);\r\n    } catch (error) {\r\n      console.log('!!',error);\r\n    }\r\n  }, []);\r\n\r\n  //댓글 write\r\n  const [writereply, setWriteReply] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteReply(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    \r\n    axios.post(`/jBook/jBookReply/write`, {\r\n      jBookmNo: lists.jBookNo,\r\n      jBookReComment: writereply,\r\n    });\r\n    \r\n    setWriteReply(\"\");\r\n    // history.push(`/jBook`);\r\n  };\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"align\">\r\n        <li>\r\n            <figure className=\"book\">\r\n                {/* <!-- Front --> */}\r\n                <ul className=\"hardcover_front\">\r\n                  <li>\r\n                    일식<img src={`/j.jpg`} className=\"bookSubImg\" />\r\n                    <span className=\"ribbon bestseller\">일식</span>\r\n                  </li>\r\n                  <li></li>\r\n                </ul>\r\n                {/* <!-- Pages -->  */}\r\n                <ul className=\"page\">\r\n                  <li></li>\r\n                  <li key={lists.jBookNo}>\r\n                    <h2>{lists.jBookTitle}</h2>\r\n                    <Link to=\"SearchPlace\" className=\"btn\">\r\n                    <img src={`/${lists.jBookImg}`}/>\r\n                    </Link>\r\n                  </li>\r\n                  <li></li>\r\n                  <li><h2>미소국</h2> <img src={`/미소국1620286243927.jpg`} /></li>\r\n                  <li><h2>돈카츠</h2> <img src={`/돈카츠1620286254267.jpg`} /></li>\r\n                  <li><h2>튀김</h2> <img src={`/튀김1620286267983.jpg`} /></li>\r\n                  <li><h2>타코야끼</h2> <img src={`/타코야끼1620286278897.jpg`} /></li>\r\n                  <li><h2>돈카츠 덮밥</h2> <img src={`/돈까스 덮밥1620286291253.jpg`} /></li>\r\n                  <li><h2>덮밥</h2> <img src={`/덮밥1620286302199.jpg`} /></li>\r\n                  <li><h2>생선모듬회</h2> <img src={`/생선모듬회1620286313492.png`} /></li>\r\n                  <li><h2>전복 버터구이</h2> <img src={`/전복 버터구이1620286324068.jpg`} /></li>\r\n                  <li><h2>튀김두부</h2> <img src={`/튀김두부1620286350552.jpg`} /></li>\r\n                  <li><h2>메밀소바</h2> <img src={`/메밀소바1620286606327.jpg`} /></li>\r\n                  <li><h2>생선카츠</h2> <img src={`/생선까스1620286616269.jpg`} /></li>\r\n                  <li><h2>연어 초밥</h2> <img src={`/연어 초밥1620286637879.jpg`} /></li>\r\n                </ul>\r\n                {/* <!-- Back --> */}\r\n                <ul className=\"hardcover_back\">\r\n                  <li></li>\r\n                  <li></li>\r\n                </ul>\r\n                <ul className=\"book_spine\">\r\n                  <li></li>\r\n                  <li></li>\r\n                </ul>\r\n              </figure>\r\n            </li>\r\n        </ul>\r\n        {/* 댓글 */}\r\n      <form className=\"bookreply_form\" onSubmit={writeReplySubmit}>\r\n        <textarea type=\"text\" onChange={writereplyChange} value={writereply} placeholder=\"내용을 입력해주세요.\" />\r\n        <button>등록</button>\r\n      </form>\r\n      {reply.map((re) => {\r\n        return (\r\n          <div className=\"bookreply_content\">\r\n            <div>{re.jBookReUserid} </div>\r\n              \r\n              <div><Moment format=\"YYYY/MM/DD\">{re.jBookReDate}</Moment></div>\r\n            <div>{re.jBookReComment}</div>\r\n            <hr style={{border:'1px solid khaki'}}/>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(JBookPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\KBookPage.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../../Book.scss\";\r\nimport Moment from \"react-moment\";\r\nconst KBookPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      kBookNo: \"\",\r\n      kBookTitle: \"\",\r\n      kBookImg: \"\",\r\n      // kBookReply:\"\",\r\n    },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    // {\r\n    //   kBookReUserid: \"\",\r\n    //   kBookReComment: \"\",\r\n    //   kBookReDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(\"/kBook\");\r\n      const inputdata = await res.data.data.kBook.map((data) => ({\r\n        kBookNo: data.kBookNo,\r\n        kBookTitle: data.kBookTitle,\r\n        kBookImg: data.kBookImg,\r\n        // kBookReply: data.kBookReply,\r\n      }));\r\n\r\n      setLists(inputdata[0]);\r\n      const kBookmNo = inputdata[0].kBookNo;\r\n      console.log(\"kobbokmno====>,,,\", kBookmNo);\r\n\r\n      const replyres = await axios.get(`/kBook/${kBookmNo}`);\r\n      console.log(\"ㅁㅁㅁㅁㅁ\");\r\n      const replydata = await replyres.data.data.kBookReply.map((data) => ({\r\n        kBookReUserid: data.kBookReUserid,\r\n        kBookReComment: data.kBookReComment,\r\n        kBookReDate: data.kBookReDate,\r\n      }));\r\n      console.log(\"replydata ==> \", replydata);\r\n      setReply(reply.concat(replydata));\r\n      console.log(\"lists==>\", lists);\r\n    } catch (error) {\r\n      console.log(\"!!\", error);\r\n    }\r\n  }, []);\r\n\r\n  //댓글 write\r\n  const [writereply, setWriteReply] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteReply(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    axios.post(`/kBook/kBookReply/write`, {\r\n      kBookmNo: lists.kBookNo,\r\n      kBookReComment: writereply,\r\n    });\r\n\r\n    setWriteReply(\"\");\r\n    // history.push(`/kBook`);\r\n  };\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"align\">\r\n        <li>\r\n          <figure className=\"book\">\r\n            {/* <!-- Front --> */}\r\n            <ul className=\"hardcover_front\">\r\n              <li>\r\n                한식<img src={`/k.jpg`} className=\"bookSubImg\" />\r\n                <span className=\"ribbon bestseller\">한식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"page\">\r\n              <li></li>\r\n              <li key={lists.kBookNo}>\r\n                <h2>{lists.kBookTitle}</h2>\r\n                <Link to=\"/SearchPlace\" className=\"btn\">\r\n                  <img src={`/${lists.kBookImg}`} />\r\n                </Link>\r\n              </li>\r\n              <li></li>\r\n              <li>\r\n                <h2>불고기</h2> <img src={`/불고기1620290784643.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>비빔밥</h2> <img src={`/비빔밥1620290806192.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>삼겹살</h2> <img src={`/삼겹살1620290815780.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>갈비</h2> <img src={`/갈비1620290825156.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>청국장</h2> <img src={`/청국장1620290834644.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>떡볶이</h2> <img src={`/떡볶이1620290843804.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>고등어구이</h2>{\" \"}\r\n                <img src={`/고등어 구이1620290855091.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>육회</h2> <img src={`/육회1620290865661.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>계란찜</h2> <img src={`/계란찜1620290888583.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>제육볶음</h2> <img src={`/제육볶음1620290898748.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>떡만둣국</h2> <img src={`/떡만둣국1620290918408.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>냉면</h2> <img src={`/냉면1620291758272.jpg`} />\r\n              </li>\r\n              {/* <li><h2>추어탕</h2> <img src={`/추어탕1620291766977.jpg`} /></li>\r\n              <li><h2>짜장면</h2> <img src={`/짜장면1620281949673.jpg`} /></li> */}\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_back\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spine\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n      </ul>\r\n      {/* 댓글 */}\r\n      <form className=\"bookreply_form\" onSubmit={writeReplySubmit}>\r\n        <textarea type=\"text\" onChange={writereplyChange} value={writereply} />\r\n        <button>등록</button>\r\n      </form>\r\n      {reply.map((re) => {\r\n        return (\r\n          <div className=\"bookreply_content\">\r\n            <div>\r\n              {re.kBookReUserid}</div>\r\n              <div><Moment format=\"YYYY/MM/DD\">{re.kBookReDate}</Moment></div>\r\n            \r\n            <div>{re.kBookReComment}</div>\r\n            <hr style={{ border: \"1px solid khaki\" }} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(KBookPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\admin\\KimNkangPage.js",["237","238","239","240","241","242","243","244"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst KimNkangPage = ({ history }) => {\r\n  const [menu, setMenu] = useState(\"\");\r\n  const [img, setImg] = useState(null);\r\n  //onchange menutitle\r\n  const writeMenu = (e) => {\r\n    console.log(e.currentTarget.value);\r\n    setMenu(e.currentTarget.value);\r\n  };\r\n  //onchang img\r\n  const formData = new FormData();\r\n  const writeImg = (e) => {\r\n    console.log(e.currentTarget.files[0]);\r\n    setImg(e.currentTarget.files[0]);\r\n  };\r\n\r\n  //중식\r\n  const cSubmit = async (e) => {\r\n    // e.preventDefault();\r\n    if (menu == \"\" && img == \"\") {\r\n      alert(\"내용이 필요합니다.\");\r\n      return false;\r\n    }\r\n    formData.append(\"file\", img);\r\n    formData.append(\"menu\", menu);\r\n    const res = await axios.post(\"/kimNkang/c\", formData);\r\n    console.log(res);\r\n    history.push(\"/kimNkang\");\r\n  };\r\n\r\n\r\n  //일식\r\n  const jSubmit = async() => {\r\n    if (menu == \"\" && img == \"\") {\r\n      alert(\"내용이 필요합니다.\");\r\n      return false;\r\n    }\r\n    formData.append(\"file\", img);\r\n    formData.append(\"menu\", menu);\r\n    await axios.post(\"/kimNkang/j\", formData );\r\n    history.push(\"/kimNkang\");\r\n  };\r\n\r\n\r\n  //한식\r\n  const kSubmit = async () => {\r\n    if (menu == \"\" && img == \"\") {\r\n      alert(\"내용이 필요합니다.\");\r\n      return false;\r\n    }\r\n    formData.append(\"file\", img);\r\n    formData.append(\"menu\", menu);\r\n    await axios.post(\"/kimNkang/k\", formData);\r\n    history.push(\"/kimNkang\");\r\n  };\r\n\r\n\r\n  //양식\r\n  const wSubmit = async () => {\r\n    if (menu == \"\" && img == \"\") {\r\n      alert(\"내용이 필요합니다.\");\r\n      return false;\r\n    }\r\n    formData.append(\"file\", img);\r\n    formData.append(\"menu\", menu);\r\n    await axios.post(\"/kimNkang/w\", formData);\r\n    history.push(\"/kimNkang\");\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={cSubmit}>\r\n        <h3>중식</h3>\r\n        <input onChange={writeMenu} placeholder=\"메뉴이름을 작성해주세요\" />\r\n        <input\r\n          type=\"file\"\r\n          onChange={writeImg}\r\n          placeholder=\"메뉴이미지를 넣어주세요\"\r\n        />\r\n        <button>추가</button>\r\n      </form>\r\n      <form onSubmit={jSubmit}>\r\n        <h3>일식</h3>\r\n        <input onChange={writeMenu} placeholder=\"메뉴이름을 작성해주세요\" />\r\n        <input\r\n          type=\"file\"\r\n          onChange={writeImg}\r\n          placeholder=\"메뉴이미지를 넣어주세요\"\r\n        />\r\n        <button>추가</button>\r\n      </form>\r\n      <form onSubmit={kSubmit}>\r\n        <h3>한식</h3>\r\n        <input onChange={writeMenu} placeholder=\"메뉴이름을 작성해주세요\" />\r\n        <input\r\n          type=\"file\"\r\n          onChange={writeImg}\r\n          placeholder=\"메뉴이미지를 넣어주세요\"\r\n        />\r\n        <button>추가</button>\r\n      </form>\r\n      <form onSubmit={wSubmit}>\r\n        <h3>양식</h3>\r\n        <input onChange={writeMenu} placeholder=\"메뉴이름을 작성해주세요\" />\r\n        <input\r\n          type=\"file\"\r\n          onChange={writeImg}\r\n          placeholder=\"메뉴이미지를 넣어주세요\"\r\n        />\r\n        <button>추가</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(KimNkangPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\CBookPage.js",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../../Book.scss\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst CBookPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      cBookNo: \"\",\r\n      cBookTitle: \"\",\r\n      cBookImg: \"\",\r\n      // cBookReply:\"\",\r\n    },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    // {\r\n    //   cBookReUserid: \"\",\r\n    //   cBookReComment: \"\",\r\n    //   cBookReDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const res = await axios.get(\"/cBook\");\r\n      const inputdata = await res.data.data.cBook.map((data) => ({\r\n        cBookNo: data.cBookNo,\r\n        cBookTitle: data.cBookTitle,\r\n        cBookImg: data.cBookImg,\r\n        // cBookReply: data.cBookReply,\r\n      }));\r\n\r\n      setLists(inputdata[0]);\r\n      const cBookmNo = inputdata[0].cBookNo;\r\n      console.log(\"cobbokmno====>,,,\", cBookmNo);\r\n\r\n      const replyres = await axios.get(`/cBook/${cBookmNo}`);\r\n      const replydata = await replyres.data.data.cBookReply.map((data) => ({\r\n        cBookReUserid: data.cBookReUserid,\r\n        cBookReComment: data.cBookReComment,\r\n        cBookReDate: data.cBookReDate,\r\n      }));\r\n      console.log(\"replydata ==> \", replydata);\r\n      setReply(reply.concat(replydata));\r\n      console.log(\"lists==>\", lists);\r\n    } catch (error) {\r\n      console.log(\"!!\", error);\r\n    }\r\n  }, []);\r\n\r\n  //댓글 write\r\n  const [writereply, setWriteReply] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteReply(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    axios.post(`/cBook/cBookReply/write`, {\r\n      cBookmNo: lists.cBookNo,\r\n      cBookReComment: writereply,\r\n    });\r\n\r\n    setWriteReply(\"\");\r\n    // history.push(`/cBook`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"align\">\r\n        <li>\r\n          <figure className=\"book\">\r\n            {/* <!-- Front --> */}\r\n            <ul className=\"hardcover_front\">\r\n              <li>\r\n                중식\r\n                <img src={`/c.jpg`} className=\"bookSubImg\" />\r\n                <span className=\"ribbon bestseller\">중식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"page\">\r\n              <li></li>\r\n              <li key={lists.cBookNo}>\r\n                <h2>{lists.cBookTitle}</h2>\r\n                <Link to=\"/SearchPlace\" className=\"btn\">\r\n                  <img src={`/${lists.cBookImg}`} />\r\n                  {/* <img src={`http://localhost:3001/${lists.cBookImg}`}/> */}\r\n                  {/* <img src={require(`../../../../../backend/uploads/${lists.cBookImg}`)}/> */}\r\n                </Link>\r\n              </li>\r\n              <li></li>\r\n              <li>\r\n                <h2>짬뽕</h2> <img src={`/짬뽕1620281976812.jfif`} />\r\n              </li>\r\n              <li>\r\n                <h2>탕수육</h2> <img src={`/탕수육1620281990652.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>마파두부</h2> <img src={`/마파두부1620282169191.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>라조기</h2> <img src={`/라조기1620282194672.jfif`} />\r\n              </li>\r\n              <li>\r\n                <h2>유산슬</h2> <img src={`/유산슬1620282233658.jfif`} />\r\n              </li>\r\n              <li>\r\n                <h2>팔보채</h2> <img src={`/팔보채1620282246019.jfif`} />\r\n              </li>\r\n              <li>\r\n                <h2>기스면</h2> <img src={`/기스면1620282257324.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>깐풍기</h2> <img src={`/깐풍기1620292181858.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>고추잡채</h2> <img src={`/고추 잡채밥1620292191297.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>짜장밥</h2> <img src={`/짜장밥1620292201194.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>해파리냉채</h2> <img src={`/해파리냉채1620292210161.jpg`} />\r\n              </li>\r\n              <li>\r\n                <h2>양장피</h2> <img src={`/볶음밥1620292222578.jpg`} />\r\n              </li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_back\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spine\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n      </ul>\r\n      {/* 댓글 */}\r\n      <form className=\"bookreply_form\" onSubmit={writeReplySubmit}>\r\n        <textarea type=\"text\" onChange={writereplyChange} value={writereply} />\r\n        <button>등록</button>\r\n      </form>\r\n      {reply.map((re) => {\r\n        return (\r\n          <div className=\"bookreply_content\">\r\n            <div>{re.cBookReUserid}</div>\r\n            <div>\r\n              <Moment format=\"YYYY/MM/DD\">{re.cBookReDate}</Moment>\r\n            </div>\r\n            <div>{re.cBookReComment}</div>\r\n            <hr style={{ border: \"1px solid khaki\" }} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CBookPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Book\\WBookPage.js",["262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../../Book.scss\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst WBookPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      wBookNo: \"\",\r\n      wBookTitle: \"\",\r\n      wBookImg: \"\",\r\n      // wBookReply:\"\",\r\n    },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    // {\r\n    //   wBookReUserid: \"\",\r\n    //   wBookReComment: \"\",\r\n    //   wBookReDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n\r\n      const res = await axios.get(\"/wBook\");\r\n      const inputdata = await res.data.data.wBook.map((data) => ({\r\n        wBookNo: data.wBookNo,\r\n        wBookTitle: data.wBookTitle,\r\n        wBookImg: data.wBookImg,\r\n        // wBookReply: data.wBookReply,\r\n      }));\r\n\r\n      setLists(inputdata[0]);\r\n      const wBookmNo =inputdata[0].wBookNo;\r\n      console.log('wobbokmno====>,,,',wBookmNo);\r\n\r\n      const replyres = await axios.get(`/wBook/${wBookmNo}`);\r\n      const replydata = await replyres.data.data.wBookReply.map((data) => ({\r\n        wBookReUserid: data.wBookReUserid,\r\n        wBookReComment: data.wBookReComment,\r\n        wBookReDate: data.wBookReDate,\r\n      }));\r\n      console.log(\"replydata ==> \", replydata);\r\n      setReply(reply.concat(replydata));\r\n      console.log(\"lists==>\", lists);\r\n    } catch (error) {\r\n      console.log('!!',error);\r\n    }\r\n  }, []);\r\n\r\n  //댓글 write\r\n  const [writereply, setWriteReply] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteReply(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    \r\n    axios.post(`/wBook/wBookReply/write`, {\r\n      wBookmNo: lists.wBookNo,\r\n      wBookReComment: writereply,\r\n    });\r\n    \r\n    setWriteReply(\"\");\r\n    // history.push(`/wBook`);\r\n  };\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"align\">\r\n        <li>\r\n            <figure className=\"book\">\r\n                {/* <!-- Front --> */}\r\n                <ul className=\"hardcover_front\">\r\n                  <li>\r\n                    양식<img src={`/w.jpg`} className=\"bookSubImg\" />\r\n                    <span className=\"ribbon bestseller\">양식</span>\r\n                  </li>\r\n                  <li></li>\r\n                </ul>\r\n                {/* <!-- Pages -->  */}\r\n                <ul className=\"page\">\r\n                  <li></li>\r\n                  <li key={lists.wBookNo}>\r\n                    <h2>{lists.wBookTitle}</h2>\r\n                    <Link to=\"/SearchPlace\" className=\"btn\">\r\n                    <img src={`/${lists.wBookImg}`}/>\r\n                    </Link>\r\n                  </li>\r\n                  <li></li>\r\n                  <li><h2>치킨 와플</h2> <img src={`/치킨 와플1620284860943.jpg`} /></li>\r\n                  <li><h2>연어 스테이크</h2> <img src={`/연어 스테이크1620284873254.jpg`} /></li>\r\n                  <li><h2>파스타 콩요리</h2> <img src={`/파스타 콩요리1620284899012.jpg`} /></li>\r\n                  <li><h2>새우 리조또</h2> <img src={`/토마토 새우 리조또1620284913076.png`} /></li>\r\n                  <li><h2>토마토 크레페</h2> <img src={`/토마토 페이스트 크레페1620284925891.jpg`} /></li>\r\n                  <li><h2>해산물 스프</h2> <img src={`/무띠 파인리 해산물 스프1620284942227.jpg`} /></li>\r\n                  <li><h2>조개 버터구이</h2> <img src={`/조개 버터구이1620284962461.png`} /></li>\r\n                  <li><h2>브루스케타</h2> <img src={`/토마토 브루스케타1620284974212.png`} /></li>\r\n                  <li><h2>캐비어 파스타</h2> <img src={`/차이브 캐비어 파스타1620284985333.png`} /></li>\r\n                  <li><h2>깔조네</h2> <img src={`/깔조네1620284994352.png`} /></li>\r\n                  <li><h2>샐러드</h2> <img src={`/지중해풍 샐러드1620285008201.png`} /></li>\r\n                </ul>\r\n                {/* <!-- Back --> */}\r\n                <ul className=\"hardcover_back\">\r\n                  <li></li>\r\n                  <li></li>\r\n                </ul>\r\n                <ul className=\"book_spine\">\r\n                  <li></li>\r\n                  <li></li>\r\n                </ul>\r\n              </figure>\r\n            </li>\r\n        </ul>\r\n          {/* 댓글 */}\r\n      <form className=\"bookreply_form\" onSubmit={writeReplySubmit}>\r\n        <textarea type=\"text\" onChange={writereplyChange} value={writereply} />\r\n        <button>등록</button>\r\n      </form>\r\n      {reply.map((re) => {\r\n        return (\r\n          <div className=\"bookreply_content\">\r\n            <div>\r\n              {re.wBookReUserid}</div>\r\n              <div><Moment format=\"YYYY/MM/DD\">{re.wBookReDate}</Moment></div>\r\n            <div>{re.wBookReComment}</div>\r\n            <hr style={{border:'1px solid khaki'}} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(WBookPage);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_reducers\\user_reducer.js",["278"],"// import {\r\n//     LOGIN_USER,\r\n//     REGISTER_USER,\r\n//     AUTH_USER\r\n// } from '../_actions/types';\r\n\r\n// export default function (state = {}, action) {\r\n//     switch (action.type) {\r\n//         case LOGIN_USER:\r\n//             return { ...state, loginSuccess: action.payload }\r\n//             break;\r\n//         case REGISTER_USER:\r\n//             return { ...state, register: action.payload }\r\n//             break;\r\n//         case AUTH_USER:\r\n//             return { ...state, userData: action.payload }\r\n//             break;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    console.log(\"action==>\",action)\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            console.log(\"REGISTER_USER ==> action.payload\",action.payload)\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            console.log(\"LOGIN_USER ==> action.payload\",action.payload)\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            console.log(\"AUTH_USER ==> action.payload\",action.payload)\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            console.log(\"LOGOUT_USER ===> action.payload\",action.payload)\r\n            return {...state }\r\n        default:\r\n            console.log('state ==> ',state)\r\n            return state;\r\n            // 여기서 문제이다.....\r\n            // return {...state, userData: {} }\r\n    }\r\n}","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_reducers\\board_reducer.js",["279"],"import {\r\n    FREEBOARD_LIST,\r\n    FREEBOARD_WRITE,\r\n    FREEBOARD_UPDATE,\r\n    FREEBOARD_DELETE,\r\n  } from \"../_actions/BoardTypes\";\r\n\r\n  \r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case FREEBOARD_LIST:\r\n            return {...state, freeBoard: action.payload }\r\n        case FREEBOARD_WRITE:\r\n            return { ...state, freeBoard: action.payload }\r\n        case FREEBOARD_UPDATE:\r\n            return {...state, freeBoard: action.payload }\r\n        case FREEBOARD_DELETE:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\MapContainer.js",["280"],"// MapContainer.js\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// const KakaoMapPage = styled.div`\r\n//   @media (min-width: 325px) {\r\n//     #myMap {\r\n//       margin: 0 auto 5px auto;\r\n//       border-radius: 15px;\r\n//       width: 280px;\r\n//       height: 300px;\r\n//     }\r\n//   }\r\n//   @media (min-width: 375px) {\r\n//     #myMap {\r\n//       margin: 0 auto 5px auto;\r\n//       border-radius: 15px;\r\n//       width: 280px;\r\n//       height: 300px;\r\n//     }\r\n//   }\r\n// `;\r\n\r\nconst { kakao } = window;\r\nlet infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\nconst MapContainer = ({ searchPlace }) => {\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    const ps = new kakao.maps.services.Places();\r\n\r\n    ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n          displayMarker(data[i]);\r\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }\r\n\r\n        map.setBounds(bounds);\r\n      }\r\n    }\r\n\r\n    function displayMarker(place) {\r\n      let marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(place.y, place.x),\r\n      });\r\n      // 마커에 클릭이벤트를 등록\r\n      kakao.maps.event.addListener(marker, \"click\", function () {\r\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출\r\n        infowindow.setContent(\r\n          '<div style=\"padding:5px;font-size:12px;\">' +\r\n            place.place_name +\r\n            \"</div>\"\r\n        );\r\n        infowindow.open(map, marker);\r\n      });\r\n    }\r\n  }, [searchPlace]);\r\n\r\n  return (\r\n    <div\r\n      id=\"myMap\"\r\n      // style={{\r\n      //   zIndex:-3\r\n      // }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default MapContainer;\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\user_action.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\board_action.js",["281"],"import axios from \"axios\";\r\nimport {\r\n  FREEBOARD_LIST,\r\n  FREEBOARD_WRITE,\r\n  FREEBOARD_DETAIL,\r\n  ADDBOARD_LIST,\r\n  FREEBOARD_DELETE,\r\n  FREEBOARD_UPDATE,\r\n  FREEBOARDREPLY_READ\r\n} from \"./BoardTypes\";\r\n\r\nexport function getFreeBoardList() {\r\n  const request = axios.get(\"/freeBoard\").then((res) => res.data.freeboard);\r\n  console.log('boardActoin ==> ',request)\r\n  return {\r\n    type: FREEBOARD_LIST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getUpdateBoardList(){\r\n  const request = axios.get(\"/freeBoard\").then((res) => res.data.freeboard);\r\n  console.log('boardActoin ==> ',request)\r\n  return {\r\n    type: FREEBOARD_UPDATE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getDeleteBoardList(){\r\n  const request = axios.get(\"/freeBoard\").then((res) => res.data.freeboard);\r\n  console.log('boardActoin ==> ',request)\r\n  return {\r\n    type: FREEBOARD_DELETE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function postFreeBoardPost() {\r\n  const request = axios.post(\"/freeBoard/write\").then((res) => res.data);\r\n\r\n  return {\r\n    type: FREEBOARD_WRITE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getFreeBoardDetail(fno) {\r\n  console.log(\"action에 들어왔어요 수박\");\r\n  const request = axios.get(`/freeBoard/${fno}`).then((res) => res.data);\r\n  console.log(\"request\", request);\r\n  return {\r\n    type: FREEBOARD_WRITE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n// export function postFreeBoardPost() {\r\n//   const request = axios.post(\"/freeBoard/write\").then((res) => res.data);\r\n\r\n//   return {\r\n//     type:FREEBOARD_WRITE,\r\n//     payload:request\r\n//   }\r\n// }\r\n\r\nexport function getAddBoardList() {\r\n  console.log(\"addboardlist\");\r\n  const req = axios.get(\"/addBoard\").then((res) => res.data);\r\n\r\n  return{\r\n    type:ADDBOARD_LIST,\r\n    payload:req\r\n  }\r\n}\r\n\r\n\r\nexport function getReplyRead(fno){\r\n  console.log('댓글 가져오기!!');\r\n\r\n  const req = axios.get(`/freeBoard/reply/${fno}`).then(res=>res.data)\r\n\r\n  return{\r\n    type:FREEBOARDREPLY_READ,\r\n    payload:req\r\n  }\r\n\r\n}","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\Lists.js",["282","283","284"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFreeBoardList,getUpdateBoardList,getDeleteBoardList } from \"../../../_actions/board_action\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst ListStyled = styled.div`\r\n  width: 860px;\r\n  margin: auto;\r\n  table {\r\n    tr {\r\n      th {\r\n        text-align: center;\r\n        width: 150px;\r\n      }\r\n      .date {\r\n        width: 250px;\r\n      }\r\n      td {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListDivStyled = styled.div`\r\n  color: black;\r\n  text-decoration:none;\r\n  text-align: center;\r\n  width: 1200px;\r\n  margin: auto;\r\n`;\r\n\r\nconst ListItemDivStyled = styled.div`\r\n  padding: 0.5rem;\r\n  text-align: center;\r\n  border: 1px solid  rgb(185, 185, 185);\r\n  border-radius:13px;\r\n  margin: 1.5rem;\r\n  width: 280px;\r\n  display: inline-block;\r\n  .nu {\r\n    div {\r\n      display: inline-block;\r\n      margin: 5px;\r\n    }\r\n  }\r\n  .dv {\r\n    div {\r\n      display: inline-block;\r\n      margin: 5px;\r\n    }\r\n  }\r\n  .fTitle {\r\n    /* white-space:normal; */\r\n    width: 270px;\r\n    margin: auto;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nconst Lists = () => {\r\n  const [lists, setLists] = useState([\r\n    // {\r\n    //   fNo: \"\",\r\n    //   fTitle: \"\",\r\n    //   fUserid: \"\",\r\n    //   fContent: \"\",\r\n    //   fDate: \"\",\r\n    //   fLike: \"\",\r\n    //   fView: \"\",\r\n    // },\r\n  ]);\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state);\r\n  console.log(\"user.userData ==> \", user, \",\");\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      dispatch(getFreeBoardList());\r\n      dispatch(getUpdateBoardList());\r\n      dispatch(getDeleteBoardList());\r\n      const res = await axios.get(\"/freeBoard\");\r\n      const inputdata = await res.data.freeboard.map((data) => ({\r\n        fNo: data.fNo,\r\n        fTitle: data.fTitle,\r\n        fUserid: data.fUserid,\r\n        fDate: data.fDate,\r\n        fLike: data.fLike,\r\n        fView: data.fView,\r\n      }));\r\n      setLists(lists.concat(inputdata));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [dispatch,getUpdateBoardList,getDeleteBoardList]);\r\n\r\n\r\n  return (\r\n    <ListDivStyled className=\"ListDivStyled\">\r\n      {lists.map((list) => (\r\n        <ListItemDivStyled key={list.fNo}  className=\"ListItemDivStyled\">\r\n          <Link to={`/freeBoard/${list.fNo}`} >\r\n            <div className=\"nu\">\r\n              <div className=\"fno\">{list.fNo}</div>\r\n              <div className=\"fUserid\">{list.fUserid}</div>\r\n            </div>\r\n            <div className=\"fTitle\">{list.fTitle}</div>\r\n            <div className=\"dv\">\r\n              <div className=\"fDate\">\r\n                <Moment format=\"YYYY/MM/DD\">{list.fDate}</Moment>\r\n              </div>\r\n              <div className=\"fView\">{list.fView}</div>\r\n            </div>\r\n          </Link>\r\n        </ListItemDivStyled>\r\n      ))}\r\n    </ListDivStyled>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lists);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\Book.js",["285","286","287","288"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./BookMain.scss\";\r\n\r\n\r\nconst Book = () => {\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"aligns\">\r\n        {/*  <!-- Book 1 --> */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <Link to=\"/cBook\"><ul className=\"hardcover_fronts\">\r\n              <li>\r\n                <div>오늘의</div><div><img src={`/c.jpg`} className=\"bookMainImg\"/></div>\r\n                <span className=\"ribbons bestsellers\">중식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul></Link>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n        {/* <!-- Book 2 --> */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <Link to=\"/jBook\"><ul className=\"hardcover_fronts\">\r\n              <li>\r\n                <div>점심은</div><div><img src={`/j.jpg`} className=\"bookMainImg\" /></div>\r\n                <span className=\"ribbons bestsellers\">일식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul></Link>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n            <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n        {/* <!-- Book 3 --> */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <Link to=\"/kBook\"><ul className=\"hardcover_fronts\">\r\n              <li>\r\n                <div>무엇</div><div><img src={`/k.jpg`} className=\"bookMainImg\" /></div>\r\n                <span className=\"ribbons bestsellers\">한식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul></Link>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n        {/* book4 */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <Link to=\"/wBook\"><ul className=\"hardcover_fronts\">\r\n              <li>\r\n                <div>일까요?</div><div><img src={`/w.jpg`} className=\"bookMainImg\" /></div>\r\n                <span className=\"ribbons bestsellers\">양식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul></Link>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Book);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\hoc\\Config.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\LeftMenu.js",["289"],"import React, { useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDetectOutsideClick } from \"./useDetectOutsideClick\";\r\n\r\nconst LeftMenu = () => {\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n  const onClick = () => setIsActive(!isActive);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"menu-container\">\r\n        <button onClick={onClick} className=\"menu-trigger\">\r\n          <span>커뮤니티</span>\r\n        </button>\r\n        <nav\r\n          ref={dropdownRef}\r\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n        >\r\n          <ul>\r\n            <li>\r\n              <Link to={\"/freeBoard\"}>자유게시판</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/addBoard\"}>신청게시판</Link>\r\n            </li>\r\n            <li>\r\n            <Link to={\"/SearchPlace\"}>카카오맵</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LeftMenu);\r\n","C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\types.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\_actions\\BoardTypes.js",[],"C:\\Users\\User\\Desktop\\test22\\frontend\\src\\components\\views\\Common\\useDetectOutsideClick.js",[],{"ruleId":"290","severity":1,"message":"291","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":19},{"ruleId":"290","severity":1,"message":"294","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"295","line":5,"column":9,"nodeType":"292","messageId":"293","endLine":5,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":7,"column":1,"nodeType":"298","endLine":44,"endColumn":2},{"ruleId":"290","severity":1,"message":"299","line":13,"column":13,"nodeType":"292","messageId":"293","endLine":13,"endColumn":17},{"ruleId":"300","severity":1,"message":"301","line":37,"column":12,"nodeType":"302","endLine":37,"endColumn":14,"suggestions":"303"},{"ruleId":"290","severity":1,"message":"304","line":11,"column":7,"nodeType":"292","messageId":"293","endLine":11,"endColumn":17},{"ruleId":"290","severity":1,"message":"305","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"306","line":18,"column":7,"nodeType":"292","messageId":"293","endLine":18,"endColumn":18},{"ruleId":"290","severity":1,"message":"307","line":83,"column":10,"nodeType":"292","messageId":"293","endLine":83,"endColumn":15},{"ruleId":"300","severity":1,"message":"308","line":98,"column":13,"nodeType":"309","endLine":103,"endColumn":4},{"ruleId":"300","severity":1,"message":"310","line":103,"column":6,"nodeType":"302","endLine":103,"endColumn":8,"suggestions":"311"},{"ruleId":"290","severity":1,"message":"312","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":26},{"ruleId":"290","severity":1,"message":"313","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"314","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":14},{"ruleId":"290","severity":1,"message":"314","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":14},{"ruleId":"290","severity":1,"message":"315","line":4,"column":16,"nodeType":"292","messageId":"293","endLine":4,"endColumn":25},{"ruleId":"316","severity":1,"message":"317","line":119,"column":30,"nodeType":"318","messageId":"319","endLine":119,"endColumn":32},{"ruleId":"316","severity":1,"message":"320","line":121,"column":33,"nodeType":"318","messageId":"319","endLine":121,"endColumn":35},{"ruleId":"316","severity":1,"message":"317","line":126,"column":15,"nodeType":"318","messageId":"319","endLine":126,"endColumn":17},{"ruleId":"300","severity":1,"message":"308","line":160,"column":5,"nodeType":"309","endLine":187,"endColumn":6},{"ruleId":"300","severity":1,"message":"321","line":189,"column":5,"nodeType":"302","endLine":189,"endColumn":15,"suggestions":"322"},{"ruleId":"316","severity":1,"message":"317","line":206,"column":30,"nodeType":"318","messageId":"319","endLine":206,"endColumn":32},{"ruleId":"316","severity":1,"message":"317","line":208,"column":27,"nodeType":"318","messageId":"319","endLine":208,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":222,"column":30,"nodeType":"318","messageId":"319","endLine":222,"endColumn":32},{"ruleId":"316","severity":1,"message":"320","line":224,"column":33,"nodeType":"318","messageId":"319","endLine":224,"endColumn":35},{"ruleId":"316","severity":1,"message":"317","line":229,"column":15,"nodeType":"318","messageId":"319","endLine":229,"endColumn":17},{"ruleId":"290","severity":1,"message":"305","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":21},{"ruleId":"290","severity":1,"message":"323","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":18},{"ruleId":"300","severity":1,"message":"324","line":113,"column":6,"nodeType":"302","endLine":113,"endColumn":8,"suggestions":"325"},{"ruleId":"316","severity":1,"message":"317","line":33,"column":14,"nodeType":"318","messageId":"319","endLine":33,"endColumn":16},{"ruleId":"290","severity":1,"message":"326","line":18,"column":9,"nodeType":"292","messageId":"293","endLine":18,"endColumn":25},{"ruleId":"290","severity":1,"message":"327","line":74,"column":11,"nodeType":"292","messageId":"293","endLine":74,"endColumn":16},{"ruleId":"290","severity":1,"message":"328","line":79,"column":11,"nodeType":"292","messageId":"293","endLine":79,"endColumn":22},{"ruleId":"329","severity":1,"message":"330","line":93,"column":19,"nodeType":"331","messageId":"332","endLine":95,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":110,"column":19,"nodeType":"331","messageId":"332","endLine":114,"endColumn":20},{"ruleId":"290","severity":1,"message":"304","line":15,"column":7,"nodeType":"292","messageId":"293","endLine":15,"endColumn":17},{"ruleId":"300","severity":1,"message":"308","line":120,"column":5,"nodeType":"309","endLine":136,"endColumn":6},{"ruleId":"300","severity":1,"message":"333","line":137,"column":5,"nodeType":"302","endLine":137,"endColumn":15,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":34,"column":15,"nodeType":"337","endLine":34,"endColumn":53},{"ruleId":"335","severity":1,"message":"336","line":59,"column":15,"nodeType":"337","endLine":59,"endColumn":53},{"ruleId":"290","severity":1,"message":"338","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"339","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":22},{"ruleId":"290","severity":1,"message":"327","line":90,"column":11,"nodeType":"292","messageId":"293","endLine":90,"endColumn":16},{"ruleId":"290","severity":1,"message":"328","line":95,"column":11,"nodeType":"292","messageId":"293","endLine":95,"endColumn":22},{"ruleId":"290","severity":1,"message":"299","line":10,"column":9,"nodeType":"292","messageId":"293","endLine":10,"endColumn":13},{"ruleId":"300","severity":1,"message":"308","line":32,"column":13,"nodeType":"309","endLine":59,"endColumn":4},{"ruleId":"300","severity":1,"message":"340","line":59,"column":6,"nodeType":"302","endLine":59,"endColumn":8,"suggestions":"341"},{"ruleId":"335","severity":1,"message":"336","line":86,"column":23,"nodeType":"337","endLine":86,"endColumn":68},{"ruleId":"335","severity":1,"message":"336","line":97,"column":21,"nodeType":"337","endLine":97,"endColumn":54},{"ruleId":"335","severity":1,"message":"336","line":101,"column":36,"nodeType":"337","endLine":101,"endColumn":73},{"ruleId":"335","severity":1,"message":"336","line":102,"column":36,"nodeType":"337","endLine":102,"endColumn":73},{"ruleId":"335","severity":1,"message":"336","line":103,"column":35,"nodeType":"337","endLine":103,"endColumn":71},{"ruleId":"335","severity":1,"message":"336","line":104,"column":37,"nodeType":"337","endLine":104,"endColumn":75},{"ruleId":"335","severity":1,"message":"336","line":105,"column":39,"nodeType":"337","endLine":105,"endColumn":79},{"ruleId":"335","severity":1,"message":"336","line":106,"column":35,"nodeType":"337","endLine":106,"endColumn":71},{"ruleId":"335","severity":1,"message":"336","line":107,"column":38,"nodeType":"337","endLine":107,"endColumn":77},{"ruleId":"335","severity":1,"message":"336","line":108,"column":40,"nodeType":"337","endLine":108,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":109,"column":37,"nodeType":"337","endLine":109,"endColumn":75},{"ruleId":"335","severity":1,"message":"336","line":110,"column":37,"nodeType":"337","endLine":110,"endColumn":75},{"ruleId":"335","severity":1,"message":"336","line":111,"column":37,"nodeType":"337","endLine":111,"endColumn":75},{"ruleId":"335","severity":1,"message":"336","line":112,"column":38,"nodeType":"337","endLine":112,"endColumn":77},{"ruleId":"290","severity":1,"message":"299","line":9,"column":9,"nodeType":"292","messageId":"293","endLine":9,"endColumn":13},{"ruleId":"300","severity":1,"message":"308","line":30,"column":13,"nodeType":"309","endLine":57,"endColumn":4},{"ruleId":"300","severity":1,"message":"340","line":57,"column":6,"nodeType":"302","endLine":57,"endColumn":8,"suggestions":"342"},{"ruleId":"335","severity":1,"message":"336","line":83,"column":19,"nodeType":"337","endLine":83,"endColumn":64},{"ruleId":"335","severity":1,"message":"336","line":94,"column":19,"nodeType":"337","endLine":94,"endColumn":53},{"ruleId":"335","severity":1,"message":"336","line":99,"column":30,"nodeType":"337","endLine":99,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":102,"column":30,"nodeType":"337","endLine":102,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":105,"column":30,"nodeType":"337","endLine":105,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":108,"column":29,"nodeType":"337","endLine":108,"endColumn":65},{"ruleId":"335","severity":1,"message":"336","line":111,"column":30,"nodeType":"337","endLine":111,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":114,"column":30,"nodeType":"337","endLine":114,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":118,"column":17,"nodeType":"337","endLine":118,"endColumn":57},{"ruleId":"335","severity":1,"message":"336","line":121,"column":29,"nodeType":"337","endLine":121,"endColumn":65},{"ruleId":"335","severity":1,"message":"336","line":124,"column":30,"nodeType":"337","endLine":124,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":127,"column":31,"nodeType":"337","endLine":127,"endColumn":69},{"ruleId":"335","severity":1,"message":"336","line":130,"column":31,"nodeType":"337","endLine":130,"endColumn":69},{"ruleId":"335","severity":1,"message":"336","line":133,"column":29,"nodeType":"337","endLine":133,"endColumn":65},{"ruleId":"316","severity":1,"message":"317","line":23,"column":14,"nodeType":"318","messageId":"319","endLine":23,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":23,"column":27,"nodeType":"318","messageId":"319","endLine":23,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":37,"column":14,"nodeType":"318","messageId":"319","endLine":37,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":37,"column":27,"nodeType":"318","messageId":"319","endLine":37,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":50,"column":14,"nodeType":"318","messageId":"319","endLine":50,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":50,"column":27,"nodeType":"318","messageId":"319","endLine":50,"endColumn":29},{"ruleId":"316","severity":1,"message":"317","line":63,"column":14,"nodeType":"318","messageId":"319","endLine":63,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":63,"column":27,"nodeType":"318","messageId":"319","endLine":63,"endColumn":29},{"ruleId":"290","severity":1,"message":"299","line":9,"column":9,"nodeType":"292","messageId":"293","endLine":9,"endColumn":13},{"ruleId":"300","severity":1,"message":"308","line":30,"column":13,"nodeType":"309","endLine":56,"endColumn":4},{"ruleId":"300","severity":1,"message":"340","line":56,"column":6,"nodeType":"302","endLine":56,"endColumn":8,"suggestions":"343"},{"ruleId":"335","severity":1,"message":"336","line":84,"column":17,"nodeType":"337","endLine":84,"endColumn":62},{"ruleId":"335","severity":1,"message":"336","line":95,"column":19,"nodeType":"337","endLine":95,"endColumn":53},{"ruleId":"335","severity":1,"message":"336","line":102,"column":29,"nodeType":"337","endLine":102,"endColumn":66},{"ruleId":"335","severity":1,"message":"336","line":105,"column":30,"nodeType":"337","endLine":105,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":108,"column":31,"nodeType":"337","endLine":108,"endColumn":69},{"ruleId":"335","severity":1,"message":"336","line":111,"column":30,"nodeType":"337","endLine":111,"endColumn":68},{"ruleId":"335","severity":1,"message":"336","line":114,"column":30,"nodeType":"337","endLine":114,"endColumn":68},{"ruleId":"335","severity":1,"message":"336","line":117,"column":30,"nodeType":"337","endLine":117,"endColumn":68},{"ruleId":"335","severity":1,"message":"336","line":120,"column":30,"nodeType":"337","endLine":120,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":123,"column":30,"nodeType":"337","endLine":123,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":126,"column":31,"nodeType":"337","endLine":126,"endColumn":71},{"ruleId":"335","severity":1,"message":"336","line":129,"column":30,"nodeType":"337","endLine":129,"endColumn":67},{"ruleId":"335","severity":1,"message":"336","line":132,"column":32,"nodeType":"337","endLine":132,"endColumn":71},{"ruleId":"335","severity":1,"message":"336","line":135,"column":30,"nodeType":"337","endLine":135,"endColumn":67},{"ruleId":"290","severity":1,"message":"299","line":10,"column":9,"nodeType":"292","messageId":"293","endLine":10,"endColumn":13},{"ruleId":"300","severity":1,"message":"308","line":32,"column":13,"nodeType":"309","endLine":59,"endColumn":4},{"ruleId":"300","severity":1,"message":"340","line":59,"column":6,"nodeType":"302","endLine":59,"endColumn":8,"suggestions":"344"},{"ruleId":"335","severity":1,"message":"336","line":86,"column":23,"nodeType":"337","endLine":86,"endColumn":68},{"ruleId":"335","severity":1,"message":"336","line":97,"column":21,"nodeType":"337","endLine":97,"endColumn":54},{"ruleId":"335","severity":1,"message":"336","line":101,"column":38,"nodeType":"337","endLine":101,"endColumn":77},{"ruleId":"335","severity":1,"message":"336","line":102,"column":40,"nodeType":"337","endLine":102,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":103,"column":40,"nodeType":"337","endLine":103,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":104,"column":39,"nodeType":"337","endLine":104,"endColumn":83},{"ruleId":"335","severity":1,"message":"336","line":105,"column":40,"nodeType":"337","endLine":105,"endColumn":86},{"ruleId":"335","severity":1,"message":"336","line":106,"column":39,"nodeType":"337","endLine":106,"endColumn":86},{"ruleId":"335","severity":1,"message":"336","line":107,"column":40,"nodeType":"337","endLine":107,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":108,"column":38,"nodeType":"337","endLine":108,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":109,"column":40,"nodeType":"337","endLine":109,"endColumn":85},{"ruleId":"335","severity":1,"message":"336","line":110,"column":36,"nodeType":"337","endLine":110,"endColumn":73},{"ruleId":"335","severity":1,"message":"336","line":111,"column":36,"nodeType":"337","endLine":111,"endColumn":78},{"ruleId":"296","severity":1,"message":"297","line":30,"column":1,"nodeType":"298","endLine":51,"endColumn":2},{"ruleId":"296","severity":1,"message":"297","line":9,"column":1,"nodeType":"298","endLine":22,"endColumn":2},{"ruleId":"290","severity":1,"message":"345","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":14},{"ruleId":"290","severity":1,"message":"346","line":5,"column":3,"nodeType":"292","messageId":"293","endLine":5,"endColumn":19},{"ruleId":"290","severity":1,"message":"304","line":9,"column":7,"nodeType":"292","messageId":"293","endLine":9,"endColumn":17},{"ruleId":"300","severity":1,"message":"308","line":83,"column":13,"nodeType":"309","endLine":101,"endColumn":4},{"ruleId":"300","severity":1,"message":"347","line":101,"column":6,"nodeType":"302","endLine":101,"endColumn":54,"suggestions":"348"},{"ruleId":"335","severity":1,"message":"336","line":16,"column":36,"nodeType":"337","endLine":16,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":56,"column":36,"nodeType":"337","endLine":56,"endColumn":82},{"ruleId":"335","severity":1,"message":"336","line":96,"column":35,"nodeType":"337","endLine":96,"endColumn":81},{"ruleId":"335","severity":1,"message":"336","line":136,"column":37,"nodeType":"337","endLine":136,"endColumn":83},{"ruleId":"290","severity":1,"message":"305","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":21},"no-unused-vars","'withTheme' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'getFreeBoardList' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["349"],"'ListStyled' is assigned a value but never used.","'useSelector' is defined but never used.","'TitleStyled' is assigned a value but never used.","'lists' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fNo'. Either include it or remove the dependency array.",["350"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'matchPath' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'match.params.fno' and 'reply'. Either include them or remove the dependency array. You can also do a functional update 'setReply(r => ...)' if you only need 'reply' in the 'setReply' call.",["351"],"'ReactQuill' is defined but never used.","React Hook useEffect has missing dependencies: 'fContent' and 'fTitle'. Either include them or remove the dependency array.",["352"],"'handleRememberMe' is assigned a value but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array. You can also do a functional update 'setLists(l => ...)' if you only need 'lists' in the 'setLists' call.",["353"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moment' is defined but never used.","'ErrorMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'lists' and 'reply'. Either include them or remove the dependency array. You can also do a functional update 'setReply(r => ...)' if you only need 'reply' in the 'setReply' call.",["354"],["355"],["356"],["357"],"'styled' is defined but never used.","'FREEBOARD_DETAIL' is defined but never used.","React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array. Outer scope values like 'getUpdateBoardList' aren't valid dependencies because mutating them doesn't re-render the component.",["358"],{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"369","fix":"371"},{"desc":"369","fix":"372"},{"desc":"369","fix":"373"},{"desc":"367","fix":"374"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"375","text":"376"},"Update the dependencies array to be: [fNo]",{"range":"377","text":"378"},"Update the dependencies array to be: [dispatch, match.params.fno, reply]",{"range":"379","text":"380"},"Update the dependencies array to be: [fContent, fTitle]",{"range":"381","text":"382"},"Update the dependencies array to be: [dispatch, lists]",{"range":"383","text":"384"},"Update the dependencies array to be: [lists, reply]",{"range":"385","text":"386"},{"range":"387","text":"386"},{"range":"388","text":"386"},{"range":"389","text":"386"},{"range":"390","text":"384"},[1415,1417],"[dispatch, props.history]",[2302,2304],"[fNo]",[4420,4430],"[dispatch, match.params.fno, reply]",[2869,2871],"[fContent, fTitle]",[2812,2822],"[dispatch, lists]",[1644,1646],"[lists, reply]",[1670,1672],[1599,1601],[1644,1646],[2263,2311]]