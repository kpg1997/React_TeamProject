{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test22\\\\frontend\\\\src\\\\components\\\\views\\\\LoginPage\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_action\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; // import { Form, Icon, Input, Checkbox, Typography } from \"antd\";\n\nimport { useDispatch } from \"react-redux\"; // const { Title } = Typography;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialId = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : \"\";\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      id: initialId,\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      id: Yup.string().required(\"id is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          id: values.id,\n          password: values.password\n        };\n        dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            window.localStorage.setItem(\"userId\", response.payload.userId);\n\n            if (rememberMe === true) {\n              window.localStorage.setItem(\"rememberMe\", values.id);\n            } else {\n              localStorage.removeItem(\"rememberMe\");\n            }\n\n            props.history.push(\"/\");\n          } else {\n            setFormErrorMessage(\"Check out your Account or Password again\");\n          }\n        }).catch(err => {\n          setFormErrorMessage(\"Check out your Account or Password again\");\n          setTimeout(() => {\n            setFormErrorMessage(\"\");\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logintitle\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginform\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"logininput\",\n              id: \"id\",\n              placeholder: \"   ID\",\n              type: \"text\",\n              value: values.id,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.id && touched.id ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), errors.id && touched.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"logininput\",\n              id: \"password\",\n              placeholder: \"   PASSWORD\",\n              type: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.password && touched.password ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), formErrorMessage && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#ff0000bf\",\n                fontSize: \"0.7rem\",\n                border: \"1px solid\",\n                padding: \"1rem\",\n                borderRadius: \"10px\"\n              },\n              children: formErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loginbutton_con\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"loginbutton\",\n                type: \"primary\",\n                htmlType: \"submit\",\n                disabled: isSubmitting,\n                onSubmit: handleSubmit,\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"lrCqOFdLxFpsZExWSag8z+OCRf0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\nexport default _c2 = withRouter(LoginPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/Desktop/test22/frontend/src/components/views/LoginPage/LoginPage.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","useDispatch","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialId","id","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","window","setItem","userId","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","color","fontSize","border","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n// import { Form, Icon, Input, Checkbox, Typography } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// const { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialId = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        id: initialId,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        id: Yup.string().required(\"id is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            id: values.id,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.id);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h1 className=\"logintitle\">Log In</h1>\r\n            <form className=\"loginform\" onSubmit={handleSubmit}>\r\n              <form required>\r\n                <input className=\"logininput\"\r\n                  id=\"id\"\r\n                  placeholder=\"   ID\"\r\n                  type=\"text\"\r\n                  value={values.id}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.id && touched.id ? \"text-input error\" : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.id && touched.id && (\r\n                  <div className=\"input-feedback\">{errors.id}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form required>\r\n                <input className=\"logininput\"\r\n                  id=\"password\"\r\n                  placeholder=\"   PASSWORD\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </form>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p\r\n                    style={{\r\n                      color: \"#ff0000bf\",\r\n                      fontSize: \"0.7rem\",\r\n                      border: \"1px solid\",\r\n                      padding: \"1rem\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <div>\r\n                <div className=\"loginbutton_con\">\r\n                  <button className=\"loginbutton\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n"]},"metadata":{},"sourceType":"module"}