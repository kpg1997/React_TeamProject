{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\test22\\\\frontend\\\\src\\\\components\\\\views\\\\RegisterPage\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport { ErrorMessage, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_action\";\nimport { useDispatch } from \"react-redux\"; // import { Form, Input, Button } from \"antd\";\n\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nfunction RegisterPage(props) {\n  _s();\n\n  console.log('props', props);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      nickname: \"\",\n      id: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      id: Yup.string().required(\"id is required\"),\n      nickname: Yup.string().required(\"NickName is required\"),\n      email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n      confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password,\n          id: values.id,\n          nickname: values.nickname\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          console.log('response.payload', response.payload);\n\n          if (response.payload.success) {\n            props.history.push(\"/users/login\");\n          } else {\n            alert(response.payload.errMsg);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            minWidth: \"300px\"\n          },\n          ...formItemLayout,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            label: \"id\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100%\",\n                height: \"45px\"\n              },\n              id: \"id\",\n              placeholder: \"ID\",\n              type: \"text\",\n              value: values.id,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.id && touched.id ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), errors.id && touched.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            label: \"NickName\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100%\",\n                height: \"45px\"\n              },\n              id: \"nickname\",\n              placeholder: \"NICKNAME\",\n              type: \"text\",\n              value: values.nickname,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.nickname && touched.nickname ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), errors.nickname && touched.nickname && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            label: \"Email\",\n            hasFeedback: true,\n            validateStatus: errors.email && touched.email ? \"error\" : \"success\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100%\",\n                height: \"45px\"\n              },\n              id: \"email\",\n              placeholder: \"EMAIL\",\n              type: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.email && touched.email ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            label: \"Password\",\n            hasFeedback: true,\n            validateStatus: errors.password && touched.password ? \"error\" : \"success\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100%\",\n                height: \"45px\"\n              },\n              id: \"password\",\n              placeholder: \"PASSWORD\",\n              type: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.password && touched.password ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            required: true,\n            label: \"Confirm Password\",\n            hasFeedback: true,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                width: \"100%\",\n                height: \"45px\"\n              },\n              id: \"confirmPassword\",\n              placeholder: \"CONFIRM PASSWORD\",\n              type: \"password\",\n              value: values.confirmPassword,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.confirmPassword && touched.confirmPassword ? \"text-input error\" : \"text-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", { ...tailFormItemLayout,\n            style: {\n              textAlign: \"center\",\n              padding: \"5px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"loginbutton\",\n              style: {\n                width: \"200px\",\n                textAlign: \"center\"\n              },\n              onClick: handleSubmit,\n              type: \"primary\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterPage;\nexport default _c2 = withRouter(RegisterPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegisterPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/Desktop/test22/frontend/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","moment","ErrorMessage","Formik","Yup","registerUser","useDispatch","withRouter","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","console","log","dispatch","email","nickname","id","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","success","history","push","alert","errMsg","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","minWidth","width","height","textAlign","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { ErrorMessage, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_action\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// import { Form, Input, Button } from \"antd\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n\r\n\r\n  console.log('props',props);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        nickname: \"\",\r\n        id: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        id: Yup.string().required(\"id is required\"),\r\n        nickname: Yup.string().required(\"NickName is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            id: values.id,\r\n            nickname: values.nickname,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            console.log('response.payload',response.payload)\r\n            if (response.payload.success) {\r\n              props.history.push(\"/users/login\");\r\n            } else {\r\n              alert(response.payload.errMsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app2\">\r\n            <h2>Sign up</h2>\r\n            <form\r\n              style={{ minWidth: \"300px\"}}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <form required label=\"id\">\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"id\"\r\n                  placeholder=\"ID\"\r\n                  type=\"text\"\r\n                  value={values.id}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.id && touched.id ? \"text-input error\" : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.id && touched.id && (\r\n                  <div className=\"input-feedback\">{errors.id}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form required label=\"NickName\">\r\n                <input  style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"nickname\"\r\n                  placeholder=\"NICKNAME\"\r\n                  type=\"text\"\r\n                  value={values.nickname}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.nickname && touched.nickname\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.nickname && touched.nickname && (\r\n                  <div className=\"input-feedback\">{errors.nickname}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"email\"\r\n                  placeholder=\"EMAIL\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"password\"\r\n                  placeholder=\"PASSWORD\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form required label=\"Confirm Password\" hasFeedback>\r\n                <input style={{width:\"100%\",height:\"45px\"}}\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"CONFIRM PASSWORD\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </form>\r\n\r\n              <form {...tailFormItemLayout} style={{textAlign:\"center\",padding:\"5px\"}}>\r\n                <button className=\"loginbutton\"\r\n                style={{width:\"200px\", textAlign:\"center\"}}\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n"]},"metadata":{},"sourceType":"module"}